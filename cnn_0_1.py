# -*- coding: utf-8 -*-
"""0_1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NhobyJmkrQUmPibTcY9rFcmWxa6q68PL
"""

from google.colab import drive
drive.mount('/content/gdrive')

import numpy as np
from keras.models import Sequential
from keras.layers import Dense, Conv2D, MaxPooling2D, Flatten, Dropout, Activation
from tensorflow.keras.preprocessing.image import ImageDataGenerator  # Sử dụng từ tensorflow.keras
from keras import losses, optimizers


train_dir = r"/content/drive/MyDrive/data_0_1/train"
validation_dir = r"/content/drive/MyDrive/data_0_1/validation"


model = Sequential()
model.add(Conv2D(64, (5, 5), input_shape=(28, 28, 1), data_format="channels_last", strides=(1, 1), padding="valid", activation="relu"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Conv2D(64, (3, 3), activation="relu", padding="valid"))
model.add(MaxPooling2D(pool_size=(2, 2)))
model.add(Dropout(0.25))
model.add(Flatten())
model.add(Dense(256, activation="relu"))
model.add(Dropout(0.2))
model.add(Dense(64, activation="relu"))
model.add(Dropout(0.2))
model.add(Dense(2))  # Chỉ có 2 lớp, vì chúng ta chỉ phân loại 0 và 1
model.add(Activation('softmax'))

# Cấu hình tối ưu hóa
optimizer = optimizers.Adadelta()
model.compile(loss=losses.categorical_crossentropy, optimizer=optimizer, metrics=['accuracy'])

# Tạo bộ dữ liệu train và validation từ thư mục
datagen = ImageDataGenerator(rescale=1.0/255)

train_generator = datagen.flow_from_directory(
    train_dir,
    target_size=(28, 28),
    color_mode="grayscale",
    batch_size=128,
    class_mode="categorical"
)

validation_generator = datagen.flow_from_directory(
    validation_dir,
    target_size=(28, 28),
    color_mode="grayscale",
    batch_size=128,
    class_mode="categorical"
)

# Huấn luyện mô hình
epochs = 10
model.fit(
    train_generator,
    validation_data=validation_generator,
    epochs=epochs,
    verbose=1
)

# Đánh giá mô hình
score = model.evaluate(validation_generator, verbose=1)
print("Test Loss: {}".format(score[0]))
print("Test Accuracy: {}".format(score[1]))

# Lưu trọng số mô hình
model.save('model_cnn_0_1.h5')  # Lưu cả cấu hình và trọng số